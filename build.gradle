plugins {
    alias(libs.plugins.groovy)
    alias(libs.plugins.shadow)
    alias(libs.plugins.delombok)
}

group = 'it.fulminazzo'
version = '1.1'

repositories {
    mavenCentral()
}

dependencies {
    // Lombok
    compileOnly libs.lombok
    annotationProcessor libs.lombok
    testCompileOnly libs.lombok
    testAnnotationProcessor libs.lombok

    // JetBrains Annotations
    compileOnly libs.annotations
    testCompileOnly libs.annotations

    // Groovy
    implementation libs.bundles.groovy

    // Logger
    implementation libs.bundles.logger

    // Spock
    testImplementation libs.spock
    testRuntimeOnly libs.byte.buddy
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

test {
    useJUnitPlatform()
}

this.ext.getMainClass = {
    return "${project.group}.${project.name.toLowerCase()}.${project.name}"
}

jar {
    enabled = true // Required for sub projects depending on sub projects
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveFileName = "${project.name}-${project.version}-original.jar"
    dependsOn(shadowJar)
    manifest {
        attributes(
                'Main-Class': getMainClass()
        )
    }
}

shadowJar {
    archiveFileName = "${project.name}-${project.version}.jar"
    manifest {
        attributes(
                'Main-Class': getMainClass()
        )
    }
}
